>> x=5

x =

     5

>> size(x)

ans =

     1     1

>> v=[1 2 3]

v =

     1     2     3

>> size(v)

ans =

     1     3

>> v=[1 2 3];
>> size(v)

ans =

     1     3

>> v

v =

     1     2     3

>> size(v);
>> A=[1 2; 3 4 ; 5 6]

A =

     1     2
     3     4
     5     6

>> size(A)

ans =

     3     2

>> A=[1 2; 3 4 ; 5 6]

A =

     1     2
     3     4
     5     6

>> A=[1 2; 3 4]

A =

     1     2
     3     4

>> v'

ans =

     1
     2
     3

>> A=[1 2; 3 4 ; 5 6]

A =

     1     2
     3     4
     5     6

>> A=A'

A =

     1     3     5
     2     4     6

>> A(i,j)
Index in position 1 is invalid. Array indices must
be positive integers or logical values.
 
>> A(1,1)

ans =

     1

>> A=A'

A =

     1     2
     3     4
     5     6

>> A=A'

A =

     1     3     5
     2     4     6

>> A(1,2)

ans =

     3

>> A(3,2)
Index in position 1 exceeds array bounds (must not
exceed 2).
 
>> A(2,3)

ans =

     6

>> A(1,:) %1st row vector :--> all column

ans =

     1     3     5

>> A(:,:) %1st row vector :--> all column

ans =

     1     3     5
     2     4     6

>> A(:,2) %1st row vector :--> all column

ans =

     3
     4

>> A[1 2 3 4;5 6 7 8; 3 5 6 7; 5 3 6 7]
 A[1 2 3 4;5 6 7 8; 3 5 6 7; 5 3 6 7]
  ↑
Error: Invalid expression. When calling a function
or indexing a variable, use parentheses.
Otherwise, check for mismatched delimiters.
 
>> A=[1 2 3 4;5 6 7 8; 3 5 6 7; 5 3 6 7]

A =

     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7

>> A(:,:) %1st row vector :--> all column

ans =

     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7

>> A(2:3,2:1) %1st row vector :--> all column

ans =

  2×0 empty double matrix

>> size(A)

ans =

     4     4

>> A(2:3,2:3) %1st row vector :--> all column

ans =

     6     7
     5     6

>> A(1,2)

ans =

     2

>> 1:10

ans =

  Columns 1 through 8

     1     2     3     4     5     6     7     8

  Columns 9 through 10

     9    10

>> c=1:10

c =

  Columns 1 through 8

     1     2     3     4     5     6     7     8

  Columns 9 through 10

     9    10

>> size(c)

ans =

     1    10

>> linespace(1,1,10)
Undefined function or variable 'linespace'.
 
Did you mean:
>> linspace(1,1,10)

ans =

  Columns 1 through 8

     1     1     1     1     1     1     1     1

  Columns 9 through 10

     1     1

>>   T=[A;A;A]

T =

     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7
     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7
     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7

>> 
>> k=[[[1 2];[3 4]];[[5 6];[7 8]]]

k =

     1     2
     3     4
     5     6
     7     8

>> size()T
 size()T
       ↑
Error: Invalid expression. Check for missing
multiplication operator, missing or unbalanced
delimiters, or other syntax error. To construct
matrices, use brackets instead of parentheses.
 
Did you mean:
>> size(T)

ans =

    12     4

>> T=[A;A;A]

T =

     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7
     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7
     1     2     3     4
     5     6     7     8
     3     5     6     7
     5     3     6     7

>> size(k)

ans =

     4     2

>> A=[1 2;3 4];
>> B=[5 6;7 8];
>> C=[9 10;11 12];
>> A+B

ans =

     6     8
    10    12

>> A-B

ans =

    -4    -4
    -4    -4

>> A*B

ans =

    19    22
    43    50

>>   A*B'

ans =

    17    23
    39    53

>> A/B

ans =

    3.0000   -2.0000
    2.0000   -1.0000

>> 1/3

ans =

    0.3333

>> A+B*c
Error using  * 
Incorrect dimensions for matrix multiplication.
Check that the number of columns in the first
matrix matches the number of rows in the second
matrix. To perform elementwise multiplication, use
'.*'.
 
>> A+B*C

ans =

   112   124
   154   170

>> (A+B)*C

ans =

   142   156
   222   244

>> A

A =

     1     2
     3     4

>> B

B =

     5     6
     7     8

>> A.*B

ans =

     5    12
    21    32

>> A./B

ans =

    0.2000    0.3333
    0.4286    0.5000

>> x[1 2 3]
 x[1 2 3]
  ↑
Error: Invalid expression. When calling a function
or indexing a variable, use parentheses.
Otherwise, check for mismatched delimiters.
 
>> x=[1 2 3]

x =

     1     2     3

>> y=[4 5 6]

y =

     4     5     6

>> x*y'

ans =

    32

>> dot(x*y)
Error using  * 
Incorrect dimensions for matrix multiplication.
Check that the number of columns in the first
matrix matches the number of rows in the second
matrix. To perform elementwise multiplication, use
'.*'.
 
>> dot(x,y)

ans =

    32

>> x

x =

     1     2     3

>> y

y =

     4     5     6

>> x*y'

ans =

    32

>> dot(x,y)

ans =

    32

>> x'*y

ans =

     4     5     6
     8    10    12
    12    15    18

>> %outer product
>> outer(x,y)
Undefined function or variable 'outer'.
 
>> %cross product
>> cross(x,y)

ans =

    -3     6    -3

>> ||x||
 ||x||
 ↑
Error: Invalid use of operator.
 
>> |x||
 |x||
 ↑
Error: Invalid use of operator.
 
>> %27:30 Learn the built in functions and constants and how to write your own functions
>> cos(30)

ans =

    0.1543

>> cos(0)

ans =

     1

>> tan(0)

ans =

     0

>> sin(x)

ans =

    0.8415    0.9093    0.1411

>> sin(4)

ans =

   -0.7568

>> sin(3)

ans =

    0.1411

>> exp(2)

ans =

    7.3891

>> exp(1)

ans =

    2.7183

>> log(8)

ans =

    2.0794

>> log(exp(1))

ans =

     1

>> sprt(9)
Undefined function or variable 'sprt'.
 
Did you mean:
>> sqrt(9)

ans =

     3

>> pi

ans =

    3.1416

>> e
Undefined function or variable 'e'.
 
>> exp(1)

ans =

    2.7183

>> sqrt(-1)

ans =

   0.0000 + 1.0000i

>> i

ans =

   0.0000 + 1.0000i

>> i*i

ans =

    -1

>> i^2

ans =

    -1

>> sin(pi)+i*cos(pi)

ans =

   0.0000 - 1.0000i

>>  I=[1 0 0;0 1 0;0 0 1]

I =

     1     0     0
     0     1     0
     0     0     1

>> eye(3)

ans =

     1     0     0
     0     1     0
     0     0     1

>> eye(4)

ans =

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

>> zeros(4)

ans =

     0     0     0     0
     0     0     0     0
     0     0     0     0
     0     0     0     0

>> zeros(3,2)

ans =

     0     0
     0     0
     0     0

>> ones(3)

ans =

     1     1     1
     1     1     1
     1     1     1

>> eye(3)

ans =

     1     0     0
     0     1     0
     0     0     1

>> %define own function
>> my_sinh(1)
Undefined function or variable 'my_sinh'.
 
>> my_sinh(1)
Undefined function or variable 'my_sinh'.
 
>> my_sinh(1)
Undefined function or variable 'my_sinh'.
 
>> my_sinh(1)
Undefined function or variable 'my_sinh'.
 
>> my_sinh(1)

ans =

    1.1752

>> my_sinh(0)
'my_sinh' is not found in the current folder or on
the MATLAB path, but exists in:
    D:\Programming\MATLAB\The Complete MATLAB Course

Change the MATLAB current folder or add its folder
to the MATLAB path.
 
>> my_sinh(0)
Error: File: my_sinh.m Line: 1 Column: 18
Invalid expression. When calling a function or
indexing a variable, use parentheses. Otherwise,
check for mismatched delimiters.
 
>> my_sinh(0)
Error: File: my_sinh.m Line: 1 Column: 18
Invalid expression. When calling a function or
indexing a variable, use parentheses. Otherwise,
check for mismatched delimiters.
 
>> my_sinh(1)
Error: File: my_sinh.m Line: 1 Column: 18
Invalid expression. When calling a function or
indexing a variable, use parentheses. Otherwise,
check for mismatched delimiters.
 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> 
>> Magnitude
Not enough input arguments.

Error in Magnitude (line 4)
c = (a^2+b^2)^.5;
 
>> Magnitude

ans =

    3.6056

>> a=2;
>> b=3;
>> Magnitude
Not enough input arguments.

Error in Magnitude (line 4)
c = (a^2+b^2)^.5;
 
>> Magnitude
Error: File: Magnitude.m Line: 4 Column: 5
Invalid use of operator.
 
>> Magnitude(2,3)

ans =

    3.6056

>> Magnitude(2,3)
Error using tan
Not enough input arguments.

Error in Magnitude (line 6)
d= tan.^-(b./a); %angle
 
>> Magnitude(2,3)

ans =

    3.6056

>> Magnitude(5,5)

ans =

    7.0711

>> a=linespace(1,10)
Undefined function or variable 'linespace'.
 
Did you mean:
>> a=linspace(1,10)

a =

  Columns 1 through 5

    1.0000    1.0909    1.1818    1.2727    1.3636

  Columns 6 through 10

    1.4545    1.5455    1.6364    1.7273    1.8182

  Columns 11 through 15

    1.9091    2.0000    2.0909    2.1818    2.2727

  Columns 16 through 20

    2.3636    2.4545    2.5455    2.6364    2.7273

  Columns 21 through 25

    2.8182    2.9091    3.0000    3.0909    3.1818

  Columns 26 through 30

    3.2727    3.3636    3.4545    3.5455    3.6364

  Columns 31 through 35

    3.7273    3.8182    3.9091    4.0000    4.0909

  Columns 36 through 40

    4.1818    4.2727    4.3636    4.4545    4.5455

  Columns 41 through 45

    4.6364    4.7273    4.8182    4.9091    5.0000

  Columns 46 through 50

    5.0909    5.1818    5.2727    5.3636    5.4545

  Columns 51 through 55

    5.5455    5.6364    5.7273    5.8182    5.9091

  Columns 56 through 60

    6.0000    6.0909    6.1818    6.2727    6.3636

  Columns 61 through 65

    6.4545    6.5455    6.6364    6.7273    6.8182

  Columns 66 through 70

    6.9091    7.0000    7.0909    7.1818    7.2727

  Columns 71 through 75

    7.3636    7.4545    7.5455    7.6364    7.7273

  Columns 76 through 80

    7.8182    7.9091    8.0000    8.0909    8.1818

  Columns 81 through 85

    8.2727    8.3636    8.4545    8.5455    8.6364

  Columns 86 through 90

    8.7273    8.8182    8.9091    9.0000    9.0909

  Columns 91 through 95

    9.1818    9.2727    9.3636    9.4545    9.5455

  Columns 96 through 100

    9.6364    9.7273    9.8182    9.9091   10.0000

>> a=linspace(1,1,10)

a =

  Columns 1 through 8

     1     1     1     1     1     1     1     1

  Columns 9 through 10

     1     1

>> a;
>> a=linspace(1,1,10);
>> b=linspace(1,1,10);
>> Magnitude(a,b)

ans =

  Columns 1 through 5

    1.4142    1.4142    1.4142    1.4142    1.4142

  Columns 6 through 10

    1.4142    1.4142    1.4142    1.4142    1.4142

>> b=linspace(11,1,20);
>> Magnitude(a,b)
Matrix dimensions must agree.

Error in Magnitude (line 5)
c = (a.^2+b.^2).^0.5; %magnitude
 
>> b';
>> Magnitude(a,b)
Matrix dimensions must agree.

Error in Magnitude (line 5)
c = (a.^2+b.^2).^0.5; %magnitude
 
>> b

b =

  Columns 1 through 5

   11.0000   10.4737    9.9474    9.4211    8.8947

  Columns 6 through 10

    8.3684    7.8421    7.3158    6.7895    6.2632

  Columns 11 through 15

    5.7368    5.2105    4.6842    4.1579    3.6316

  Columns 16 through 20

    3.1053    2.5789    2.0526    1.5263    1.0000

>> b';
>> x=1:10;
>> my_sinh(x)

ans =

   1.0e+04 *

  Columns 1 through 5

    0.0001    0.0004    0.0010    0.0027    0.0074

  Columns 6 through 10

    0.0202    0.0548    0.1490    0.4052    1.1013

>> mod(5,2)

ans =

     1

>> ~1

ans =

  logical

   0

>> ~0

ans =

  logical

   1

>> x=1:10;
>> is_even(x)

ans =

  1×10 logical array

   0   1   0   1   0   1   0   1   0   1

>> %linear equation
>> A=[1 2 3;4 5 6:1 -1 -1];
Dimensions of arrays being concatenated are not
consistent.
 
>> A=[1 2 3;4 5 6;1 -1 -1];
>> b=[1 1 -1]';
>> A/b;
Error using  / 
Matrix dimensions must agree.
 
>> A\b

ans =

   -0.5000
         0
    0.5000

>> Ax=b;
>> Ax=b

Ax =

     1
     1
    -1

>> A=[3 2 -1;2 -2 4;-1 0.5 -1];
>> A

A =

    3.0000    2.0000   -1.0000
    2.0000   -2.0000    4.0000
   -1.0000    0.5000   -1.0000

>> b=[1 -2 -2];
>> x=inv(A)

x =

    0.0000   -0.5000   -2.0000
    0.6667    1.3333    4.6667
    0.3333    1.1667    3.3333

>> b=b';
>> x*b

ans =

    5.0000
  -11.3333
   -8.6667

>> b=[1 -2 0];
>> x*b'

ans =

    1.0000
   -2.0000
   -2.0000

>> A=A\b
Error using  \ 
Matrix dimensions must agree.
 
>> A=A\b'

A =

    1.0000
   -2.0000
   -2.0000

>> A=b/A
Error using  / 
Matrix dimensions must agree.
 
>> A=b'/A

A =

         0   -0.5000         0
         0    1.0000         0
         0         0         0

>> A=A\b
Error using  \ 
Matrix dimensions must agree.
 
>> A=A\b'
Warning: Matrix is singular to working precision. 

A =

   NaN
   NaN
   NaN

>> X
Undefined function or variable 'X'.
 
Did you mean:
>> x

x =

    0.0000   -0.5000   -2.0000
    0.6667    1.3333    4.6667
    0.3333    1.1667    3.3333

>> A=[3 2 -1;2 -2 4;-1 0.5 -1];
>> b

b =

     1    -2     0

>> A=A\b'

A =

    1.0000
   -2.0000
   -2.0000

>> % the result of :inv(A) any matrix  divided by a matrix
>> %is equal to A mtrix \()Backslash a matrix b gives equal result
>> det(A)
Error using det
Matrix must be square.
 
>> A

A =

    1.0000
   -2.0000
   -2.0000

>> A=[3 2 -1;2 -2 4;-1 0.5 -1];
>> det(A)

ans =

   -3.0000

>> inv(A)

ans =

    0.0000   -0.5000   -2.0000
    0.6667    1.3333    4.6667
    0.3333    1.1667    3.3333

>> eig(A)

ans =

    3.6295
   -3.8445
    0.2150

>> % If want to measure eigen matrix
>> A=[C,D]=eig(A)
 A=[C,D]=eig(A)
        ↑
Error: Incorrect use of '=' operator. To assign a
value to a variable, use '='. To compare values for
equality, use '=='.
 
>> [C,D]=eig(A)

C =

   -0.9601   -0.3061   -0.3288
   -0.2098    0.9134    0.7469
    0.1847   -0.2682    0.5780


D =

    3.6295         0         0
         0   -3.8445         0
         0         0    0.2150

>>  % D= digonal eigen values matrix 
>> %C= eigen vectors
>> A*C==C*D

ans =

  3×3 logical array

   0   0   0
   0   0   0
   0   0   0

>> A*C-C*D

ans =

   1.0e-14 *

    0.2665   -0.0666    0.0375
   -0.0555   -0.1776    0.0749
   -0.0666    0.0222   -0.0194

>> 1e-14

ans =

   1.0000e-14

>> a=1e-14

a =

   1.0000e-14

>> b=1*10^-14

b =

   1.0000e-14

>> a=b

a =

   1.0000e-14

>> a/b

ans =

     1

>> V=C

V =

   -0.9601   -0.3061   -0.3288
   -0.2098    0.9134    0.7469
    0.1847   -0.2682    0.5780

>> s=norm(V)

s =

    1.3046

>> norm(A*C-C*D)

ans =

   2.8641e-15

>> for i=1:10 
display(i);
end

i =

     1


i =

     2


i =

     3


i =

     4


i =

     5


i =

     6


i =

     7


i =

     8


i =

     9


i =

    10

>> 